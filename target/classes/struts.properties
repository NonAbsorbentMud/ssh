# 指定Web应用的默认编码集。该属性对于处理中文请求参数非常有用，对于获取中文请求参数值，应该将该属性值设置为GBK或者GB2312
# struts.i18n.encoding=UTF-8

# 该属性指定需要Struts 2处理的请求后缀，该属性的默认值是action，即所有匹配*.action的请求都由Struts2处理。
# 如果用户需要指定多个请求后缀，则多个后缀之间以英文逗号（,）隔开。
# struts.action.extension=action,,do

# 该属性设置Struts2应用是否使用开发模式。
# 如果设置该属性为true，则可以在应用出错时显示更多、更友好的出错提示。
# 该属性只接受true和flase两个值，该属性的默认值是false。
# 通常，应用在开发阶段，将该属性设置为true，当进入产品发布阶段后，则该属性设置为false。
# struts.devMode=true

# 指定Struts 2默认的ObjectFactory Bean，该属性默认值是spring
# struts.objectFactory=spring

# 该属性指定加载Struts2配置文件的配置文件管理器,默认值是org.apache.Struts2.config.DefaultConfiguration
# 如果需要实现自己的配置管理器，开发者则可以实现一个实现Configuration接口的类，该类可以自己加载Struts 2配置文件
# struts.configuration=org.apache.Struts2.config.DefaultConfiguration

# 指定Web应用的默认Locale。
# struts.locale=Locale

# 指定Spring框架的自动装配模式，该属性的默认值是name，即默认根据Bean的name属性自动装配。
# struts.objectFactory.spring.autoWrite=name

# 该属性指定整合Spring框架时，是否缓存Bean实例，该属性只允许使用true和false两个属性值，它的默认值是true。通常不建议修改该属性值。
# struts.objectFactory.spring.useClassCache=true

# 该属性指定Struts 2的类型检测机制，通常支持tiger和notiger两个属性值。
# struts.objectTypeDeterminer=tiger

# 该属性指定处理multipart/form-data的MIME类型（文件上传）请求的框架，该属性支持cos、pell和jakarta等属性值，即分别对应使用cos的文件上传框架、pell上传及common-fileupload文件上传框架。该属性的默认值为jakarta。
# 注意  如果需要使用cos或者pell的文件上传方式，则应该将对应的JAR文件复制到Web应用中。例如，使用cos上传方式，则需要自己下载cos框架的JAR文件，并将该文件放在WEB-INF/lib路径下。
# struts.multipart.parser=jakarta

# 该属性指定上传文件的临时保存路径，该属性的默认值是javax.servlet.context.tempdir。
# struts.multipart.saveDir=javax.servlet.context.tempdir

# 该属性指定Struts 2文件上传中整个请求内容允许的最大字节数。
# struts.multipart.maxSize=2048

# 该属性指定Struts2应用加载用户自定义的属性文件，该自定义属性文件指定的属性不会覆盖struts.properties文件中指定的属性。
# 如果需要加载多个自定义属性文件，多个自定义属性文件的文件名以英文逗号（,）隔开。
# struts.custom.properties=struts.properties

# 指定将HTTP请求映射到指定Action的映射器，
# Struts2提供了默认的映射器：org.apache.struts2.dispatcher.mapper.DefaultActionMapper。
# 默认映射器根据请求的前缀与Action的name属性完成映射。
# struts.mapper.class=org.apache.struts2.dispatcher.mapper.DefaultActionMapper

# 该属性设置是否通过JAR文件提供静态内容服务，该属性只支持true和false属性值，该属性的默认属性值是true。
# struts.serve.static=true

# 该属性设置浏览器是否缓存静态内容。当应用处于开发阶段时，我们希望每次请求都获得服务器的最新响应，则可设置该属性为false。
# struts.serve.static.browserCache=false

# 该属性设置Struts 2是否支持动态方法调用，该属性的默认值是true。如果需要关闭动态方法调用，则可设置该属性为false。
# struts.enable.DynamicMethodInvocation=true

# 该属性设置Struts 2是否允许在Action名中使用斜线，该属性的默认值是false。如果开发者希望允许在Action名中使用斜线，则可设置该属性为true。
# struts.enable.SlashesInActionNames=true

# 该属性指定是否允许在Struts 2标签中使用表达式语法，因为通常都需要在标签中使用表达式语法，故此属性应该设置为true，该属性的默认值是true。
# struts.tag.altSyntax=true

# 该属性设置是否每次HTTP请求到达时，系统都重新加载资源文件。该属性默认值是false。
# 在开发阶段将该属性设置为true会更有利于开发，但在产品发布阶段应将该属性设置为false。
# struts.i18n.reload=false

# 该属性指定视图标签默认的视图主题，该属性的默认值是xhtml。
# struts.ui.theme=xhtml

# 该属性指定视图主题所需要模板文件的位置，该属性的默认值是template，即默认加载template路径下的模板文件。
# struts.ui.templateDir=template

# 该属性指定模板文件的后缀，该属性的默认属性值是ftl。该属性还允许使用ftl、vm或jsp，分别对应FreeMarker、Velocity和JSP模板。
# struts.ui.templateSuffix=ftl

# 该属性设置当struts.xml文件改变后，系统是否自动重新加载该文件。该属性的默认值是false。
# struts.configuration.xml.reload=false

# 该属性指定Velocity框架所需的velocity.properties文件的位置。该属性的默认值为velocity.properties。
# struts.velocity.configfile=velocity.properties

# 该属性指定Velocity框架的Context位置，如果该框架有多个Context，则多个Context之间以英文逗号（,）隔开。
# struts.velocity.contexts=

# 该属性指定Velocity框架的toolbox的位置。
# struts.velocity.toolboxlocation=

# 该属性指定Web应用所在的监听端口。该属性通常没有太大的用户，只是当Struts 2需要生成URL时（例如Url标签），该属性才提供Web应用的默认端口。
# struts.url.http.port=

# 该属性类似于struts.url.http.port属性的作用，区别是该属性指定的是Web应用的加密服务端口。
# struts.url.https.port=

# 该属性指定Struts 2生成URL时是否包含请求参数。该属性接受none、get和all三个属性值，
# 分别对应于不包含、仅包含GET类型请求参数和包含全部请求参数。
# struts.url.includeParams=

# 该属性指定Struts 2应用所需要的国际化资源文件，如果有多份国际化资源文件，则多个资源文件的文件名以英文逗号（,）隔开。
# struts.custom.i18n.resources=

# 对于某些JavaEE服务器，不支持HttpServletRequest调用getParameterMap()方法，此时可以设置该属性值为true来解决该问题。
# 该属性的默认值是false。对于WebLogic、Orion和OC4J服务器，通常应该设置该属性为true。
# struts.dispatcher.parametersWorkaround=

# 该属性指定Struts 2使用的FreeMarker管理器。
# 该属性的默认值是org.apache.struts2.views.freemarker.FreemarkerManager，这是Struts2内建的FreeMarker管理器。
# struts.freemarker.manager.classname=

# 该属性只支持true和false两个属性值，默认值是true。通常无需修改该属性值。
# struts.freemarker.wrapper.altMap=

# 该属性指定XSLT Result是否使用样式表缓存。当应用处于开发阶段时，该属性通常被设置为true；
# 当应用处于产品使用阶段时，该属性通常被设置为false。
# struts.xslt.nocache=

# 该属性指定Struts2框架默认加载的配置文件，如果需要指定默认加载多个配置文件，则多个配置文件的文件名之间以英文逗号（,）隔开。
# 该属性的默认值为struts-default.xml,struts-plugin.xml,struts.xml，看到该属性值，
# 读者应该明白为什么Struts 2框架默认加载struts.xml文件了。
# struts.configuration.files=